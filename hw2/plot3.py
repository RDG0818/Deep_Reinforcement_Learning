import matplotlib.pyplot as plt

# Replace these lists with your actual data
iterations = list(range(100))  # Example iterations, replace with your actual iteration list

# Data from your experiments (replace with your actual lists)
eval_return_no_baseline = [-703.3228149, -1041.965332, -903.4831543, -1008.429565, -959.6722412, -1000.276062, -979.8791504, -888.6315918, -782.9650879, -906.0183105, -783.4849854, -888.748291, -823.4880371, -861.2211304, -820.4754639, -790.1917725, -852.5189819, -853.5008545, -714.0732422, -691.9375, -878.4572754, -715.3798828, -743.2224121, -578.5878906, -819.1688232, -692.0283203, -620.2784424, -736.1491699, -763.963623, -655.8021851, -485.1434326, -703.319519, -784.4387207, -408.8482666, -755.4029541, -730.2816772, -474.3850098, -677.1518555, -540.2260742, -634.7531128, -587.3068848, -596.0960693, -690.1600342, -530.6989746, -532.4304199, -601.6512451, -565.2340698, -463.9393921, -485.9127502, -433.1820984, -475.7585449, -456.2888184, -471.345459, -521.1710205, -504.8304749, -558.8778687, -548.744873, -593.0003662, -526.7597046, -526.5777588, -483.9221191, -364.8843384, -332.8236084, -420.6587524, -446.5801086, -438.9425964, -333.1701355, -325.0643921, -406.9304199, -467.2584534, -486.8198242, -416.6293945, -351.7324829, -406.5880737, -438.4251709, -357.791626, -415.8438721, -401.7890625, -445.2982483, -368.3775024, -348.9021606, -351.5249634, -499.0387268, -286.692749, -420.3718567, -389.8162231, -286.615509, -293.2042847, -339.6652222, -240.9095459, -380.8534546, -224.2249146, -286.3308716, -316.1759644, -334.1133423, -169.3369446, -242.5861206, -292.9405212, -306.0078735, -268.0891724]  # Replace with actual evaluation return for no baseline
eval_return_baseline = [-783.9543457, -843.4717407, -894.0487671, -951.977417, -1145.942383, -1031.388184, -944.0339355, -1115.08252, -1089.783691, -998.7647095, -1154.72522, -1225.249268, -1144.318848, -1214.378174, -1078.953247, -1077.056885, -798.9898071, -935.2346191, -957.1068115, -751.9365234, -812.9106445, -740.8922119, -588.944397, -759.9165649, -696.4249268, -682.0787354, -651.3752441, -716.907959, -620.1702881, -542.8095703, -540.5549316, -554.4095459, -538.3690186, -455.9750671, -448.3058472, -470.7494202, -568.7231445, -451.8868713, -409.4112549, -423.9584351, -519.9857178, -442.77771, -461.1064453, -301.3428345, -468.0770569, -462.9673157, -462.4479675, -264.1468201, -184.6628571, -410.4779053, -434.8467712, -423.1138611, -386.5150146, -361.9759521, -334.0095215, -465.8020325, -309.2182312, -322.050354, -399.9971619, -300.4684143, -346.1587524, -283.2210999, -320.3002319, -351.5815735, -261.6276855, -316.6520386, -263.8947144, -290.5548706, -315.7321167, -320.6355591, -253.8704681, -220.0019073, -326.7195435, -280.8576355, -192.7478027, -266.8975525, -228.4407654, -380.2155457, -320.7191772, -276.43927, -201.3220825, -182.3162537, -310.6863403, -407.09021, -220.2171021, -219.6014709, -204.1097717, -192.2344818, -190.9378204, -234.9440765, -171.1684265, -70.68448639, -115.267868, -44.89187622, -80.65640259, -22.71201515, 0.019078016, -50.66699219, 53.58988571, 21.36501694]  # Replace with actual evaluation return for with baseline
baseline_loss_baseline = [-110.2928009, -122.930748, -132.7739258, -149.3087769, -139.0015259, -163.4324951, -155.5137024, -145.9089813, -137.4457397, -137.4430542, -167.289032, -125.8541718, -149.1727295, -124.8770981, -98.71933746, -102.2565765, -80.90053558, -70.82835388, -40.34809875, -35.98909378, -17.61390495, -9.862051964, -2.846852064, 10.65166569, 29.00563049, 30.11544991, 34.02108002, 47.19178772, 46.33351135, 50.9726944, 44.65180969, 54.88925171, 57.62308884, 44.96500778, 50.80931091, 55.54301071, 52.80868912, 47.2038002, 44.50049973, 18.24288177, 46.86037827, 7.133614063, 8.06546402, 36.09204102, 28.7328434, 23.35608482, 25.5887928, 15.76603413, 14.99823952, 10.72265244, 19.785429, 9.25709343, 4.039164066, 3.91004014, -1.097159743, 9.002893448, 8.437003136, 2.40912509, 3.566712618, 2.383461237, -0.643423975, 0.69721961, -6.943272591, -13.68058014, -2.830404758, -1.630153179, -7.613040447, -9.837041855, -7.001384258, -10.59133911, -5.075483799, -17.10906219, 7.574484348, 2.346761227, -0.959033906, 2.323413372, 1.819615245, -3.106918812, -2.207577229, 3.185234785, 7.485793114, 3.622371435, 4.334371567, 7.407795906, 3.376249313, 6.851770878, 11.79562187, 9.570124626, 9.309853554, 11.67754269, 17.07275009, 6.711966991, 11.43926144, 14.57717228, 16.302742, 17.30045319, 16.84566116, 17.46007538, 17.30912209, 12.33522892]  # Replace with actual baseline loss for with baseline

# Create the figure and axis
fig, ax1 = plt.subplots(figsize=(10, 6))

# Plot the evaluation return for both experiments
ax1.plot(iterations, eval_return_no_baseline, label='Eval Return (No Baseline)', color='blue')
ax1.plot(iterations, eval_return_baseline, label='Eval Return (With Baseline)', color='green')
ax1.set_xlabel('Iterations')
ax1.set_ylabel('Evaluation Return')
ax1.legend(loc='upper left')
ax1.grid(True)

# Set title and display the graph
plt.title('Evaluation Return (HalfCheetah-v4)')
plt.show()
